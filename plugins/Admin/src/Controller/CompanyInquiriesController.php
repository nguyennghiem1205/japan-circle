<?php
namespace Admin\Controller;

use Admin\Controller\AppController;
use Cake\Event\Event;

/**
 * CompanyInquiries Controller
 *
 * @property \Admin\Model\Table\CompanyInquiriesTable $CompanyInquiries
 */
class CompanyInquiriesController extends AppController
{
    public function beforeFilter(Event $event)
    {
        parent::beforeFilter($event); // TODO: Change the autogenerated stub
        $this->loadModel('JcApiModel');
        $this->titleLayout = __('Inquiry');
    }

    /**
     * Index method
     *
     * @return void
     */
    public function index()
    {
        $inquiries = $this->CompanyInquiries->find('all',[
            'contain' => ['Members'],
            'order' => ['CompanyInquiries.modified' => 'desc']
        ]);
        $listMemberIds = array();
        foreach($inquiries as $inquiry) {
            $listMemberIds[] = $inquiry->member->id;
        }
        $memberApi = $this->JcApiModel->getListData('members',1,9999999999,$listMemberIds);
        $listMembers = array();
        foreach($memberApi as $member) {
            $listMembers[$member['Member']['id']] = $member;
        }
        $industries = $this->JcApiModel->getList('industries');
        $this->set('companyInquiries', $inquiries);
        $this->set(compact('listMembers','industries'));
        $this->set('_serialize', ['companyInquiries']);
    }

    /**
     * View method
     *
     * @param string|null $id Company Inquiry id.
     * @return void
     * @throws \Cake\Network\Exception\NotFoundException When record not found.
     */
    public function view($id = null)
    {
        $companyInquiry = $this->CompanyInquiries->get($id, [
            'contain' => ['Members']
        ]);
        $industries = $this->JcApiModel->getList('industries');
        $member = $this->JcApiModel->getMember($companyInquiry->member_id);
        $this->set('companyInquiry', $companyInquiry);
        $this->set(compact('industries','member'));
        $this->set('_serialize', ['companyInquiry']);
    }

    /**
     * Edit method
     *
     * @param string|null $id Company Inquiry id.
     * @return void Redirects on successful edit, renders view otherwise.
     * @throws \Cake\Network\Exception\NotFoundException When record not found.
     */
    public function edit($id = null)
    {
        $companyInquiry = $this->CompanyInquiries->get($id, [
            'contain' => []
        ]);
        if ($this->request->is(['patch', 'post', 'put'])) {
            $companyInquiry = $this->Core->patchEntity($companyInquiry, $this->request->data,'Admin.CompanyInquiries');
            if ($this->CompanyInquiries->save($companyInquiry)) {
                $this->Flash->success(__('The company inquiry has been saved.'));
                return $this->redirect(['action' => 'index']);
            } else {
                $this->Flash->error(__('The company inquiry could not be saved. Please, try again.'));
            }
        }
        $member = $this->JcApiModel->getMember($companyInquiry->member_id);
        $industryApi = $this->JcApiModel->getListData('industries');
        $industries = array();
        foreach($industryApi as $industry) {
            if($industry['Industry']['parent_id']) {
                $industries[$industry['Industry']['code']] = $industry['Industry']['name_'.$this->fieldLanguage];
            }
        }
        $this->imageFields = $companyInquiry->imageFields;
        $this->set(compact('companyInquiry', 'member','industries'));
        $this->set('_serialize', ['companyInquiry']);
    }

    /**
     * Delete method
     *
     * @param string|null $id Company Inquiry id.
     * @return void Redirects to index.
     * @throws \Cake\Network\Exception\NotFoundException When record not found.
     */
    public function delete($id = null)
    {
        if($this->allowAccess == false) return;
        $this->request->allowMethod(['post', 'delete']);
        $companyInquiry = $this->CompanyInquiries->get($id);
        if ($this->CompanyInquiries->delete($companyInquiry)) {
            $this->Flash->success(__('The company inquiry has been deleted.'));
        } else {
            $this->Flash->error(__('The company inquiry could not be deleted. Please, try again.'));
        }
        return $this->redirect(['action' => 'index']);
    }
}
