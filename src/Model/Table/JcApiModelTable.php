<?php
namespace App\Model\Table;

use Cake\Cache\Cache;
use Cake\Core\Configure;
use Cake\Network\Session;
use Cake\ORM\Table;
use JcApi;

/**
 * Users Model
 *
 * @property \Cake\ORM\Association\BelongsTo $Facebooks
 */
class jcApiModelTable extends Table
{
    public $jcApi;
    public $cacheConfig = 'api';
    public $cacheMember = 'api_member';
    public $fieldLanguage;

    public function initialize(array $config)
    {
        parent::initialize($config); // TODO: Change the autogenerated stub
        $session = new Session();

        $lang = $session->read('Config.language');
        $fieldLanguage = 'vie';
        switch ($lang) {
            case 'ja_JP':
                $fieldLanguage = 'jpn';
                break;
            case 'vi_VN':
                $fieldLanguage = 'vie';
                break;
            case 'en_US':
                $fieldLanguage = 'eng';
                break;
        }
        $this->fieldLanguage = $fieldLanguage;

        $curUser = $session->read('Core.Users');
        if($curUser && $curUser->group == GROUP_ADMIN) {
            $this->cacheConfig = 'api_backend';
        }
        $this->jcApi = new JcApi(KEY_API, $this->fieldLanguage);
    }


    public function getList($object){
        $data = Cache::read($object.'_list_api'.$this->fieldLanguage, $this->cacheConfig);
        if (!$data) {
            $this->jcApi->setLanguage($this->fieldLanguage);
            $data = $this->jcApi->getList($object);
            Cache::write($object.'_list_api'.$this->fieldLanguage, $data, $this->cacheConfig);
        }
        return $data;
    }

    public function getListData($object, $page = 1, $limit = 20, $strIds = array(), $country = null) {
        if($object != 'members') {
            $data = Cache::read('getlistData'.$object.$country.$this->fieldLanguage.'_listData_api', $this->cacheConfig);
            if (!$data) {
                $data = $this->jcApi->getListData($object, 0, 20, array(), $country);
                Cache::write('getlistData'.$object.$country.$this->fieldLanguage.'_listData_api', $data, $this->cacheConfig);
            }
        } else {
            $listIds = json_encode($strIds);
            $data = Cache::read($object.'_'.$page.'_'.$this->fieldLanguage.$country.$limit.'_'.md5($listIds).'_listData_api', $this->cacheMember);
            if (!$data) {
                $data = $this->jcApi->getListData($object,$page,$limit,$strIds,$country);
                Cache::write($object.'_'.$page.'_'.$this->fieldLanguage.$country.$limit.'_'.md5($listIds).'_listData_api', $data, $this->cacheMember);
            }
        }

        return $data;
    }

    public function getListByCode($object,$code) {
        $data = Cache::read($object.'_'.$this->fieldLanguage.$code.'_code_api', $this->cacheConfig);
        if (!$data) {
            $data = $this->jcApi->getListByCode($object,$code);
            Cache::write($object.'_'.$this->fieldLanguage.$code.'_code_api', $data, $this->cacheConfig);
        }
        return $data;
    }

    public function getDetailByCode($object,$code)
    {
        $data = Cache::read($object.'_'.$this->fieldLanguage.$code.'_detail_api', $this->cacheConfig);
        if(!$data) {
            $data = $this->jcApi->getDetailByCode($object,$code);
            Cache::write($object.'_'.$this->fieldLanguage.$code.'_detail_api',$data, $this->cacheConfig);
        }
        return $data;
    }

    public function getMember($id) {
        $data = Cache::read($id.$this->fieldLanguage.'_getMember_api', $this->cacheMember);
        if (!$data) {
            $data = $this->jcApi->getMember($id);
            Cache::write($id.$this->fieldLanguage.'_getMember_api', $data, $this->cacheMember);
        }
        return $data;
    }

    public function getMembersByIndustry($industry, $page, $limit, $country = MEMBER_COMPANY_COUNTRY_VIETNAM) {
        $data = Cache::read($industry.$this->fieldLanguage.'_'.$page.'_'.$country.$limit.'_getMembersByIndustry_api', $this->cacheConfig);
        if (!$data) {
            $data = $this->jcApi->getMembersByIndustry($industry, $page, $limit, $country);
            Cache::write($industry.$this->fieldLanguage.'_'.$page.'_'.$country.$limit.'_getMembersByIndustry_api', $data, $this->cacheConfig);
        }
        return $data;
    }


}
